{"version":3,"sources":["component/MarkdownEditor/index.module.css","utility.ts","component/NavBar.tsx","component/UserBar.tsx","component/CascadeSelect.tsx","service.ts","component/PathSelect.tsx","component/JSONEditor/AddBar.tsx","component/JSONEditor/index.tsx","component/MarkdownEditor/TurnDown.ts","component/MarkdownEditor/index.tsx","page/Editor.tsx","page/index.tsx","model/index.ts","index.tsx"],"names":["module","exports","isEmpty","value","isNaN","uniqueID","parseInt","Math","random","slice","toString","unitISO","patternISO","formatDate","time","Date","now","template","temp","getTimezoneOffset","toISOString","split","reduce","section","index","replace","padStart","length","debounce","origin","timer","interval","clearTimeout","parameter","setTimeout","bind","apply","concat","this","sandbox","document","createElement","fragment","createDocumentFragment","insertToCursor","append","selection","window","getSelection","getRangeAt","insertNode","parseURLData","raw","location","search","data","exec","URLSearchParams","key","JSON","parse","Array","push","parseCookie","cookie","Object","fromEntries","map","item","shift","join","DataURI","blobFrom","URI","type","base64","atob","aBuffer","ArrayBuffer","uBuffer","Uint8Array","i","charCodeAt","Blob","blobOf","a","fetch","blob","readAs","encoding","reader","FileReader","Promise","resolve","reject","onload","result","onerror","readAsText","readAsDataURL","readAsBinaryString","readAsArrayBuffer","TypeError","encodeBase64","btoa","encodeURIComponent","_","p1","String","fromCharCode","NavBar","title","menu","expand","theme","background","rightSlot","UID","className","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","classNames","active","target","URL","baseURI","undefined","observer","name","avatar_url","html_url","blog","style","width","alt","src","CascadeSelect","state","path","list","changeLevel","splice","Infinity","getNextLevel","level","setState","required","props","label","IID","LID","onChange","trim","htmlFor","filter","Boolean","React","Component","token","github","Octokit","auth","getCurrentUser","users","getAuthenticated","getContents","repository","owner","repo","repos","updateContent","message","sha","content","createOrUpdateFile","PathSelect","Function","pathName","onLoad","contents","ErrorClass","status","includes","rel","type_map","string","icon","text","object","array","AddBar","onSelect","entries","onClick","dataChange","propertyKey","descriptor","method","children","call","ListField","metaOf","addItem","newKey","oldKey","find","newValue","defaultValue","placeholder","onBlur","setValue","slot","field_type","wrapper","setKey","fieldOf","from","test","Empty_HREF","options","headingStyle","hr","bulletListMarker","codeBlockStyle","linkStyle","use","gfm","addRule","node","nodeName","toLowerCase","getAttribute","replacement","HTMLElement","TurnDown","MarkdownEditor","convertor","contentEditable","createRef","count","countText","root","textContent","handleOuterData","event","dataTransfer","clipboardData","items","preventDefault","all","kind","getAsString","marked","file","getAsFile","createObjectURL","parts","HTML","innerHTML","childNodes","remove","manualChange","rules","current","MarkdownIME","dispatchEvent","CustomEvent","bubbles","detail","ref","STYLE","editor","data-count","onInput","onPaste","onDrop","code","turndown","pageURL","fileType","MarkDown","YAML","postMeta","Editor","Selector","Core","meta","copied","setContent","setPostMeta","core","reset","selector","onPathClear","fixURL","querySelectorAll","element","startsWith","submit","elements","media","protocol","filePath","download_url","getContent","alert","copyMarkdown","clipboard","authors","login","categories","Set","tags","date","stringify","updated","onReset","onSubmit","contentFilter","values","flat","navData","store","user","cursor","loadingCount","Application","client","hook","before","after","assign","observable","action","auto","ApplicationModel","ReactDOM","render","getElementById","signIn","addEventListener","reason","hostname","returnValue"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,OAAS,iC,wXCDpB,SAASC,EAAQC,GACtB,QAAkB,MAATA,IAAoC,kBAAVA,GAAsBC,MAAMD,GAG1D,SAASE,IACd,OAAOC,UAAUC,KAAKC,SAAW,IAAIC,MAAM,IAAIC,SAAS,IAG1D,IAAMC,EAAU,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MACzCC,EAAa,aAIZ,SAASC,IAGb,IAFDC,EAEA,uDAF+BC,KAAKC,MACpCC,EACA,uDADW,sBAEXH,EAAO,IAAIC,KAAKD,GAEhB,IAAMI,EAAiB,IAAIH,MAAMD,EAAkC,GAA3BA,EAAKK,oBAA2B,KACrEC,cACAC,MAAM,SACNC,QAAO,SAACJ,EAAMK,EAASC,GAItB,OAFAN,EAAKP,EAAQa,KAAWD,EAEjBL,IACN,IAEL,OAAOD,EAASQ,QAAQb,GAAY,SAAAW,GAAO,OACxCL,EAAKK,EAAQ,IAAM,IAAIG,SAASH,EAAQI,OAAQ,QAY9C,SAASC,EAASC,GAAiD,IACpEC,EADkDC,EAAiB,uDAAN,IAGjE,OAAO,WACLC,aAAaF,GADiC,2BAAlBG,EAAkB,yBAAlBA,EAAkB,gBAG9CH,EAAQI,WAENL,EAAOM,KAAKC,MAAMP,EAAQ,GAAGQ,OAAOD,MAAM,CAACE,MAAOL,IACvC,IAAXF,IAKN,IAAMQ,EAAUC,SAASC,cAAc,YACrCC,EAAWF,SAASG,yBAef,SAASC,IACdF,EAASG,OAAT,MAAAH,EAAQ,WAER,IAAMI,EAAYC,OAAOC,eAErBF,GAAWA,EAAUG,WAAW,GAAGC,WAAWR,GAc7C,SAASS,IAA4C,IAA/BC,EAA8B,uDAAxBL,OAAOM,SAASC,OAC3CC,EAAY,GAChBtB,GAAa,iBAAiBuB,KAAKJ,IAAQ,IAAI,GAFQ,uBAIzD,YAAyB,IAAIK,gBAAgBxB,GAA7C,+CAAyD,CAAC,IAAD,6BAA/CyB,EAA+C,KAA1CvD,EAA0C,KACvD,IACEA,EAAQwD,KAAKC,MAAMzD,GACnB,UAEED,EAAQqD,EAAKG,IACfH,EAAKG,GAAOvD,GAIRoD,EAAKG,aAAgBG,QAAQN,EAAKG,GAAO,CAACH,EAAKG,KAErDH,EAAKG,GAAKI,KAAK3D,KAhBwC,kFAmBzD,OAAOoD,EAGF,SAASQ,IAAoC,IAAxBX,EAAuB,uDAAjBZ,SAASwB,OACzC,OAAOC,OAAOC,YACZd,EAAI/B,MAAM,QAAQ8C,KAAI,SAAAC,GACpB,IAAMb,EAAOa,EAAK/C,MAAM,KAExB,MAAO,CAACkC,EAAKc,QAASd,EAAKe,KAAK,UAKtC,IAAMC,EAAU,0CAQT,SAASC,EAASC,GAAa,MAEFF,EAAQf,KAAKiB,IAAQ,GAFnB,mBAE5BC,GAF4B,WAElBC,GAFkB,WAEVpB,EAFU,KAIpCA,EAAOoB,EAAS5B,OAAO6B,KAAKrB,GAAQA,EAMpC,IAJA,IAAMsB,EAAU,IAAIC,YAAYvB,EAAK5B,QAE/BoD,EAAU,IAAIC,WAAWH,GAEtBI,EAAI,EAAG1B,EAAK0B,GAAIA,IAAKF,EAAQE,GAAK1B,EAAK2B,WAAWD,GAE3D,OAAO,IAAIE,KAAK,CAACN,GAAU,CAAEH,SAGxB,SAAeU,EAAtB,kC,4CAAO,WAAsBX,GAAtB,SAAAY,EAAA,sEACSC,MAAMb,GADf,uCACqBc,QADrB,4C,sBAaA,SAASC,EACdjC,GAGuC,IAFvCmB,EAEsC,uDAF/B,UACPe,EACsC,uDAD3B,QAELC,EAAS,IAAIC,WAEnB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAK3B,OAJAJ,EAAOK,OAAS,kBAAMF,EAAQH,EAAOM,SAErCN,EAAOO,QAAUH,EAETpB,GACN,IAAK,OACH,OAAOgB,EAAOQ,WAAW3C,EAAMkC,GACjC,IAAK,UACH,OAAOC,EAAOS,cAAc5C,GAC9B,IAAK,eACH,OAAOmC,EAAOU,mBAAmB7C,GACnC,IAAK,cACH,OAAOmC,EAAOW,kBAAkB9C,GAGpC,MAAM+C,UAAU,qBAAuB5B,MAWpC,SAAe6B,EAAtB,kC,4CAAO,WAA4BnD,GAA5B,SAAAiC,EAAA,2DACEjC,aAAe+B,MADjB,6BAEAZ,EAFA,SAEoBiB,EAAOpC,GAF3B,gCAEQI,KAFR,0CAE+C,GAF/C,iBAEmD,GAFnD,6BAGDT,OAAOyD,KACLC,mBAAmBrD,GAAK3B,QAAQ,mBAAmB,SAACiF,EAAGC,GAAJ,OACjDC,OAAOC,eAAe,KAAOF,QALhC,oF,mDC9KQ,SAASG,EAAT,GAOE,IANfC,EAMc,EANdA,MAMc,IALdC,YAKc,MALP,GAKO,MAJdC,cAIc,MAJL,KAIK,MAHdC,aAGc,MAHN,QAGM,MAFdC,kBAEc,MAFD,QAEC,EADdC,EACc,EADdA,UAEMC,EAAMhH,IAEZ,OACE,yBACEiH,UAAS,+BAA0BL,EAA1B,mBAA2CC,EAA3C,eAAuDC,EAAvD,gBAET,yBAAKG,UAAU,aACb,uBAAGA,UAAU,eAAeC,KAAK,KAC9BR,GAEH,4BACErC,KAAK,SACL4C,UAAU,iBACVE,cAAY,WACZC,cAAa,IAAMJ,EACnBK,gBAAeL,EACfM,gBAAc,QACdC,aAAW,qBAEX,0BAAMN,UAAU,yBAGlB,yBAAKA,UAAU,2BAA2BO,GAAIR,GAC5C,wBAAIC,UAAU,sBACXN,EAAK7C,KAAI,WAAkB3C,GAAlB,IDoCIiD,ECpCDsC,EAAH,EAAGA,MAAOQ,EAAV,EAAUA,KAAV,OACR,wBACED,UAAWQ,IAAW,WAAY,CAAEC,QAASvG,IAC7CkC,IAAKqD,GAEL,uBACEO,UAAU,WACVC,KAAMA,EACNS,QD4BQvD,EC5BU8C,ED6B3B,IAAIU,IAAIxD,EAAKjC,SAAS0F,SAASrG,SAAWkB,OAAOM,SAASxB,OC7BvB,cAAWsG,IAEpCpB,GACCvF,GAAS,0BAAM8F,UAAU,WAAhB,mBAKlBF,KChEIgB,mBAAS,YAAwD,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,SAAUC,EAAQ,EAARA,KACrE,OACE,uBAAGjB,KAAMiB,GAAQD,EAAUxB,MAAOsB,GAChC,yBACEf,UAAU,gBACVmB,MAAO,CAAEC,MAAO,UAChBC,IAAKN,EACLO,IAAKN,Q,yECOiBO,E,2MAI5BxB,IAAMhH,I,EAENyI,MAAQ,CACNC,KAAM,GACNC,KAAM,I,EA8BRC,YAAcrH,EAAQ,uCAAC,WAAOJ,EAAerB,GAAtB,qBAAAkF,EAAA,+DACE,EAAKyD,MAApBC,EADa,EACbA,KAAMC,EADO,EACPA,KAEdD,EAAKG,OAAO1H,EAAO2H,IAAUhJ,GAHR,SAKD,EAAKiJ,eALJ,OAOR,OAFPC,EALe,QAOFL,EAAKE,SAAS1H,EAAO2H,IAAUE,GAC7CL,EAAKrH,SAAWH,EAErB,EAAK8H,SAAS,CAAEN,SAVK,2CAAD,yD,uEAZb,IAAD,EACiB1G,KAAKwG,MAApBC,EADF,EACEA,KAAMC,EADR,EACQA,KAEd1G,KAAKgH,SAAS,CAAEP,KAAM,CAACA,EAAK,IAAKC,KAAM,CAACA,EAAK,Q,0CAI7C1G,KAAK2G,aAAa,EAAG,M,+BAkBb,IAAD,OAEL5B,EAIE/E,KAJF+E,IACS2B,EAGP1G,KAHFwG,MAASE,KAEAO,EACPjH,KADFkH,MAASD,SAGX,OACE,oCACGP,EAAK7E,KAAI,WAA6B3C,GAAW,IAArCiI,EAAoC,EAApCA,MAAOT,EAA6B,EAA7BA,KACZU,EAAG,gBAAYrC,EAAZ,YAAmB7F,GAC1BmI,EAAG,eAAWtC,EAAX,YAAkB7F,GAEvB,OACE,0BAAMkC,IAAKgG,EAAKpC,UAAU,6BACxB,2BACE5C,KAAK,OACL4C,UAAU,eACVO,GAAI6B,EACJV,KAAMW,EACNC,SAAU,gBAAazJ,EAAb,EAAG6H,OAAU7H,MAAb,OACPA,EAAQA,EAAM0J,SAAW,EAAKZ,YAAYzH,EAAOrB,IAEpDoJ,UAAW/H,GAAS+H,IAEtB,8BAAU1B,GAAI8B,GACXX,EAAK7E,KAAI,SAAAC,GAAI,OACZ,4BAAQjE,MAAOiE,EAAMV,IAAKU,QAG9B,2BAAO0F,QAASJ,EAAKpC,UAAU,aAC5BmC,U,2BAvEb,OAAOnH,KAAKwG,MAAMC,KACfgB,OAAOC,SACPvJ,MAAM,GAAI,GACV6D,KAAK,O,2BAIR,OAAOhC,KAAKwG,MAAMC,KAAKtI,OAAO,GAAG,K,+BAIjC,OAAO6B,KAAKwG,MAAMC,KAAKgB,OAAOC,SAAS1F,KAAK,S,GApBtC2F,IAAMC,W,mPCjBRC,E,6WAAoBpG,I,GAAkBZ,KAAtCgH,MAEFC,EAAS,IAAIC,IAAQ,CAAEC,KAAMH,IAK5B,SAAeI,IAAtB,+B,4CAAO,sBAAAlF,EAAA,sEACS+E,EAAOI,MAAMC,mBADtB,uCAC0ClH,MAD1C,4C,sBAUA,SAAemH,EAAtB,mC,8CAAO,WAA2BC,GAA3B,mCAAAtF,EAAA,6DAA+C0D,EAA/C,+BAAsD,GAAtD,EACiB4B,EAAWtJ,MAAM,KADlC,mBACEuJ,EADF,KACSC,EADT,cAGST,EAAOU,MAAMJ,YAAY,CAAEE,QAAOC,OAAM9B,SAHjD,uCAG0DxF,MAH1D,4C,sBAcA,SAAewH,GAAtB,yC,8CAAO,WACLJ,EACA5B,EACAiC,EACAzH,GAJK,uBAAA8B,EAAA,+DAMiBsF,EAAWtJ,MAAM,KANlC,mBAMEuJ,EANF,KAMSC,EANT,uBAScH,EAAYC,EAAY5B,GATtC,OASCkC,EATD,OAS6CA,IAT7C,kEAYSb,EAAOU,MAZhB,KAaHF,EAbG,KAcHC,EAdG,KAeH9B,EAfG,KAgBHiC,EAhBG,UAiBYzE,EAAahD,GAjBzB,gCAkBH0H,EAlBG,MAaHL,MAbG,KAcHC,KAdG,KAeH9B,KAfG,KAgBHiC,QAhBG,KAiBHE,QAjBG,KAkBHD,IAlBG,qBAYsBE,mBAZtB,wDAmBD5H,MAnBC,0D,6BCbc6H,G,YAMnB,WAAY5B,GAAqB,IAAD,8BAC9B,4CAAMA,KAHRO,YAEgC,EAG9B,EAAKA,OAASP,EAAMO,kBAAkBsB,SAAW7B,EAAMO,OAASC,QAEhE,EAAKlB,MAAMP,SAAW,GALQ,E,qEAS9B,8DAEAjG,KAAKgH,SAAS,CAAEf,SAAU,O,gLAKxBF,EAIE/F,KAJF+F,KACAiD,EAGEhJ,KAHFgJ,S,EAGEhJ,KADFkH,MAASmB,E,EAAAA,WAAYY,E,EAAAA,O,kBAIEb,EAAYC,EAAYW,G,aAAzCE,E,kBAEkB3H,O,yCACf,CACL4F,MAAO,IACPT,KAAMwC,EAASzB,OAAOzH,KAAKyH,QAAQ5F,KAAI,qBAAGkE,U,UAGtC3D,EAA4B8G,EAA5B9G,KAAMwG,EAAsBM,EAAtBN,QAAS3C,EAAaiD,EAAbjD,SAEV,SAAT7D,E,mDAEJpC,KAAKgH,SAAS,CAAEf,aAEZgD,aAAkBF,UACpBE,EAAOhD,EAAU/D,EAAS,gBAAD,OAAiB0G,K,kDAC7BO,E,KAANpD,KAAkBqD,E,KAAAA,OAEV,cAAfD,GACW,MAAXC,GAEArD,EAAKsD,SAAS,MACdJ,aAAkBF,UAElBE,EAAO,sBAAD,OAAuBZ,EAAvB,wBAAiDW,I,+IAIpD,IAEC/C,EAAajG,KAAKwG,MAAlBP,SAER,OACE,mGAEGA,GACC,uBACEjB,UAAU,eACVU,OAAO,SACPT,KAAMgB,EACNqD,IAAI,uBAEJ,8BAAOrD,S,GAvEqBM,G,SCnBlCgD,GAAW,CACfC,OAAQ,CAAE/E,MAAO,cAAegF,KAAM,cACtCC,KAAM,CAAEjF,MAAO,YAAagF,KAAM,cAClCE,OAAQ,CAAElF,MAAO,iBAAkBgF,KAAM,WACzCG,MAAO,CAAEnF,MAAO,eAAgBgF,KAAM,YAOzB,SAASI,GAAT,GAA4C,IAA1BC,EAAyB,EAAzBA,SAC/B,OACE,6BACGnI,OAAOoI,QAAQR,IAAU1H,KAAI,mCAAET,EAAF,YAASqD,EAAT,EAASA,MAAOgF,EAAhB,EAAgBA,KAAhB,OAC5B,4BACErI,IAAKA,EACLgB,KAAK,SACL4C,UAAW,qCAAuCyE,EAClDhF,MAAOA,EACPuF,QAASF,EAASjK,KAAK,KAAMuB,S,6kBCXvC,SAAS6I,GACPvE,EACAwE,EACAC,GAEA,IAAMC,EAAS1E,EAAOwE,GAEtBC,EAAWtM,MAAQ,SAEjBqB,EAFiB,GAIhB,IADkB+B,EACnB,EADEyE,OAAU7H,MACZ,EAC0BmC,KAAKwG,MAAvB6D,SAEFvI,QAHN,MACmB,GADnB,GAGsB5C,GAEtB,GAAK4C,EAAL,CAEAsI,EAAOE,KAAKtK,KAAM8B,EAAMb,GAPxB,IASQqG,EAAatH,KAAKkH,MAAlBI,SAEJA,aAAoByB,UAEtBzB,EAAS,CAAE5B,OAAQ,CAAE7H,MAAOmC,KAAKwG,MAAM3I,WAItC,IAAM0M,IAAb,8MACE/D,MADF,MAEO+D,EAAUC,OAAO,EAAKtD,MAAMrJ,QAFnC,EAoCE4M,QAAU,SAACrI,GACT,IAAIN,EAAiB,CAAEM,OAAMvE,MAAO,IAEpC,OAAQuE,GACN,IAAK,SACHN,EAAOyI,EAAUC,OAAO,IACxB,MACF,IAAK,OACH1I,EAAOyI,EAAUC,OAAO,MACxB,MACF,IAAK,SACH1I,EAAOyI,EAAUC,OAAO,IACxB,MACF,IAAK,QACH1I,EAAOyI,EAAUC,OAAO,IAG5B,EAAKxD,SAAL,MACK,EAAKR,MADV,CAEE6D,UAAW,EAAK7D,MAAM6D,UAAY,IAAItK,OAAO+B,OAvDnD,sEA4DSA,EAAgB4I,GAAiB,IAAD,EACJ1K,KAAKwG,MAA9B3I,EAD6B,EAC7BA,MAD6B,IACtBwM,gBADsB,MACX,GADW,EAGrCvI,EAAKV,IAAMsJ,EAH0B,eAK5BC,GACP,IAAKN,EAASO,MAAK,qBAAGxJ,MAAkBuJ,KAItC,OAHA9M,EAAM6M,GAAU7M,EAAM8M,UAEf9M,EAAM8M,GACP,CAAN,WALJ,IAAK,IAAIA,KAAU9M,EAAnB,SAAS8M,GAAT,kCAQA9M,EAAM6M,GAAU5I,EAAKjE,QAzEzB,+BA6EWiE,EAAgB+I,GAAgB,IAC/BhN,EAAUmC,KAAKwG,MAAf3I,MAEJgN,aAAoBtJ,MAAOsJ,EAAQ,YAAOA,GACjB,kBAAbA,IAAuBA,EAAQ,MAAQA,IAEvD/I,EAAKjE,MAAQgN,EAEG,MAAZ/I,EAAKV,IAAavD,EAAMiE,EAAKV,IAAM,IAAMyJ,EACpChN,aAAiB0D,QAAOO,EAAKV,IAAMvD,EAAM2D,KAAKqJ,GAAY,KAtFvE,8BAyFU3L,EAAekD,EAAcvE,GACnC,OAAQuE,GACN,IAAK,SACH,OACE,2BACEA,KAAK,OACL4C,UAAU,eACV8F,aAAcjN,EACdkN,YAAY,QAEZC,OAAQhL,KAAKiL,SAASpL,KAAKG,KAAMd,KAGvC,IAAK,OACH,OACE,8BACE8F,UAAU,eACV8F,aAAcjN,EACdkN,YAAY,QAEZC,OAAQhL,KAAKiL,SAASpL,KAAKG,KAAMd,KAGvC,QACE,OAEE,kBAACqL,EAAD,CAAW1M,MAAOA,EAAOyJ,SAAUtH,KAAKiL,SAASpL,KAAKG,KAAMd,QAnHtE,8BAwHUgM,GACN,MAA2B,UAApBlL,KAAKwG,MAAMpE,KAChB,wBAAI4C,UAAU,eAAekG,GAE7B,wBAAIlG,UAAU,eAAekG,KA5HnC,+BAgIY,IAAD,SACqClL,KAAKwG,MAAnC2E,EADP,EACC/I,KADD,IACmBiI,gBADnB,MAC8B,GAD9B,EAGP,OAAOrK,KAAKoL,QACV,oCACE,wBAAIpG,UAAU,cACZ,kBAAC6E,GAAD,CAAQC,SAAU9J,KAAKyK,WAExBJ,EAASxI,KAAI,WAAuB3C,GAAvB,IAAGkD,EAAH,EAAGA,KAAMhB,EAAT,EAASA,IAAKvD,EAAd,EAAcA,MAAd,OACZ,wBAAImH,UAAU,6BAA6B5D,IAAKA,GAC9B,WAAf+J,GACC,2BACE/I,KAAK,OACL4C,UAAU,eAEV8F,aAAc1J,EACd6F,UAAQ,EACR8D,YAAY,MAEZC,OAAQ,EAAKK,OAAOxL,KAAK,EAAMX,KAGlC,EAAKoM,QAAQpM,EAAOkD,EAAMvE,YAtJvC,8BAKgBA,GAAuB,IAAD,OAClC,OAAIA,aAAiB0D,MACZ,CACLa,KAAM,QACNvE,QACAwM,SAAU9I,MAAMgK,KAAK1N,GAAO,SAACA,EAAOuD,GAClC,OAAO,MACF,EAAKoJ,OAAO3M,GADjB,CAEEuD,YAKJvD,aAAiB8D,OACZ,CACLS,KAAM,SACNvE,QACAwM,SAAU1I,OAAOoI,QAAQlM,GAAOgE,KAAI,YAAmB,IAAD,mBAAhBT,EAAgB,KAAXvD,EAAW,KACpD,OAAO,MACF,EAAK2M,OAAO3M,GADjB,CAEEuD,YAKD,CACLgB,KAAM,SAASoJ,KAAK3N,GAAS,OAAS,SACtCA,aAhCN,GAA+B8J,IAAMC,WAArC,oCA2DGqC,IA3DH,2GA4EGA,IA5EH,2E,iRCnCA,IAAMwB,GAAa,qC,eAKjB,WAAYC,GAAgB,IAAD,8BACzB,4C,2WAAA,EACEC,aAAc,MACdC,GAAI,MACJC,iBAAkB,IAClBC,eAAgB,SAChBC,UAAW,cACRL,MAGAM,IAAIC,MACNC,QAAQ,UAAW,CAClBzE,OAAQ,SAAA0E,GAAI,MACV,CAAC,IAAK,QAAQ9C,SAAS8C,EAAKC,SAASC,gBACrCZ,GAAWD,KAAKW,EAAKG,aAAa,SAAW,KAC/CC,YAAa,SAAC3D,EAASuD,GAAV,OACXvD,EAAQrB,SACP4E,aAAgBK,YAAcL,EAAK1H,MAAM8C,OAAS,OAEtD2E,QAAQ,aAAc,CACrBzE,OAAQ,CAAC,QAAS,UAClB8E,YAAa,iBAAM,MArBE,E,2BADAE,M,qBCMRC,G,YAYnB,WAAYxF,GAAqB,IAAD,EAK9B,IAAK,IAAI9F,KALqB,qBAC9B,4CAAM8F,KAZRyF,eAWgC,IAVxBC,gBAAkBC,sBAUM,EAJhCrG,MAAQ,CACNsG,MAAO,GAGuB,EAahCC,UAAYzN,GAAS,WACnB,IAAIwN,EAAQ,EAER,EAAKE,OAAMF,GAAS,EAAKE,KAAKC,aAAe,IAAI1F,OAAOlI,QAE5D,EAAK2H,SAAS,CAAE8F,aAlBc,EA6ChCI,gBA7CgC,uCA6Cd,WAAOC,GAAP,qBAAApK,EAAA,2DAEEoK,EAAMC,cAAgBD,EAAME,eAAtCC,EAFQ,EAERA,OAEG,GAJK,wDAMhBH,EAAMI,kBAEF7G,EAA2BnF,MAAMgK,KAAK+B,IAEjC1C,MAAK,gBAAGxI,EAAH,EAAGA,KAAH,MAAc,WAAWoJ,KAAKpJ,QAC1CsE,EAAOA,EAAKe,QAAO,kBAAuB,eAAvB,EAAGrF,SAXR,SAaIkB,QAAQkK,IAC1B9G,EAAK7E,KAAI,SAACC,GACR,GAAkB,WAAdA,EAAK2L,KACP,OAAO,IAAInK,SAAQ,SAAAC,GAAO,OACxBzB,EAAK4L,aAAY,SAAA5M,GAAG,OAAIyC,EAAQoK,KAAO7M,UAG3C,IAAM8M,EAAO9L,EAAK+L,YAElB,GAAID,EAAM,CACR,IAAMtH,EAAMX,IAAImI,gBAAgBF,GAEhC,OAAQ9L,EAAKM,KAAKrD,MAAM,KAAK,IAC3B,IAAK,QACH,MAAM,YAAN,OAAmBuH,EAAnB,KACF,IAAK,QACH,MAAM,cAAN,OAAqBA,EAArB,aACF,IAAK,QACH,MAAM,cAAN,OAAqBA,EAArB,cAGN,MAAO,OAlCK,OAaVyH,EAbU,OAsChBzN,EAAc,WAAd,eT9CqB0N,ES8CMD,EAAMtG,OAAOC,SAAS1F,KAAK,MT7CxD/B,EAAQgO,UAAYD,EAEbzM,MAAMgK,KAAKtL,EAAQ2I,QAAQsF,YAAYrM,KAAI,SAAAsK,GAEhD,OADAA,EAAKgC,SACEhC,QS2CP,EAAKiC,eAxCW,kCTRb,IAAkBJ,ISQL,OA7Cc,sDAG9B,EAAKrB,UAAY,IAAIF,GAELvF,EAAMmH,MAAO,EAAK1B,UAAUT,QAAQ9K,EAAK8F,EAAMmH,MAAMjN,IALvC,S,kEAP9B,OAAOpB,KAAK4M,gBAAgB0B,Y,yDAiB5BC,KAAoBvO,KAAKgN,Q,qCAYzBhN,KAAK+M,YAED/M,KAAKgN,MACPhN,KAAKgN,KAAKwB,cACR,IAAIC,YAAY,QAAS,CACvBC,SAAS,EACTC,OAAQ3O,KAAKgN,KAAKC,iB,+BA6DxB,OACE,yBACEL,iBAAe,EACfgC,IAAK5O,KAAK4M,gBACV5H,UAAWQ,IAAW,eAAgB,gBAAiBqJ,KAAMC,QAC7DC,aAAY/O,KAAKwG,MAAMsG,MACvBkC,QAAShP,KAAK+M,UACdkC,QAASjP,KAAKkN,gBACdgC,OAAQlP,KAAKkN,oB,wBAhEXiC,GACDnP,KAAKgN,OAEVhN,KAAKgN,KAAKiB,UAAYN,KAAOwB,GAE7BnP,KAAKoO,iB,eAIL,OAAOpO,KAAKgN,KAAOhN,KAAK2M,UAAUyC,SAASpP,KAAKgN,MAAQ,O,GAtDhBrF,IAAMC,W,imBCH3C,I,SAAMyH,GAAU5O,OAAOM,SAASkE,KAAKlG,MAAM,KAAK,GAE1CuQ,GAAW,CACtBC,SAAU,CAAC,KAAM,YACjBlO,KAAM,CAAC,QACPmO,KAAM,CAAC,MAAO,SAGHC,GAAW,gCAIHC,G,2MACXC,SAAW9C,sB,EAMX+C,KAAO/C,sB,EAMflH,IAAM,G,EAENa,MAAQ,CACNqJ,KAAM,KACNC,QAAQ,G,EA+BVC,W,uCAAa,WAAOpK,EAAa1E,GAApB,mBAAA8B,EAAA,yDACX,EAAK4C,IAAMA,EAELvD,EAAOuD,EAAI5G,MAAM,KAAKZ,OAAO,GAAG,GAEhC8C,aAAgB4B,KALX,oBAMLyM,GAASC,SAASlG,SAASjH,GANtB,gCAMmC,EAAK4N,cANxC,wDAWU9M,EAAOjC,EAAM,QAXvB,UAWP2H,EAXO,QAaP0G,GAASjO,KAAKgI,SAASjH,GAbhB,0CAcF,EAAK4E,SAAS,CAAE6I,KAAMxO,KAAKC,MAAMsH,MAd/B,YAgBP0G,GAASE,KAAKnG,SAASjH,GAhBhB,0CAiBF,EAAK4E,SAAS,CAAE6I,KAAML,KAAKlO,MAAMsH,MAjB/B,WAmBLiH,EAAOJ,GAASvO,KAAK0H,GAnBhB,kCAqBM,EAAKoH,cArBX,gCAuBTpH,EAAUA,EAAQzK,MAAM0R,EAAK,GAAGxQ,QAEhCwQ,EAAK,GAAKA,EAAK,GAAGtI,OAEdsI,EAAK,IAAI,EAAKG,YAAYH,EAAK,IA3B1B,QA8BP,EAAKI,OAAM,EAAKA,KAAKnP,IAAM8H,GA9BpB,4C,0DAiCbsH,MAAQ,WACN,EAAKlJ,SAAS,CAAE6I,KAAM,OAElB,EAAKM,UAAU,EAAKA,SAASD,QAC7B,EAAKD,OAAM,EAAKA,KAAKnP,IAAM,K,EAGjCsP,YAAc,YAE6B,EADzC1K,OAAU7H,MAEA0J,SAEV,EAAKP,SAAS,CAAE6I,KAAM,OAElB,EAAKI,OAAM,EAAKA,KAAKnP,IAAM,M,EAGjCuP,OAAS/Q,GAAS,WAAO,IACf+I,EAAe,EAAKnB,MAApBmB,WAER,GAAI,EAAK4H,MAAQ,EAAKA,KAAKjD,KAA3B,4BACE,YAAoB,EAAKiD,KAAKjD,KAAKsD,iBACjC,iBADF,+CAEG,CAAC,IAFKC,EAEN,QACGpO,EAAMoO,EAAQtL,MAAQsL,EAAQjK,IAE9BnE,EAAIqO,WAAWnB,MAAUlN,EAAMA,EAAIhE,MAAMkR,GAAQhQ,SAErD8C,EAAM,IAAIwD,IAAIxD,EAAK,EAAKwD,KAAOlF,OAAOM,SAASkE,MAAQ,GAEnD,QAASsL,EACXA,EAAQjK,IAAMnE,EAAIhD,QAChBkJ,EAAa,SACbA,EAAa,SAEZkI,EAAQtL,KAAO9C,GAfxB,uF,EA2CFsO,O,uCAAS,WAAOtD,GAAP,6CAAApK,EAAA,yDACPoK,EAAMI,iBAEElF,EAAe,EAAKnB,MAApBmB,WAHD,iBAMSW,EANT,EAMHmH,SAAYnH,SACZiH,EAPG,EAOHA,KAGAvH,EAAYyE,EAAMzH,OAAOgL,SAAzBhI,QAECuH,GAASA,EAAKjD,KAZZ,iDAcD2D,EAA4B,GAAGlJ,OAAO6C,KAC1C2F,EAAKjD,KAAKsD,iBAAiB,qCAC3B,gBAAGhK,EAAH,EAAGA,IAAH,MAAuC,UAA1B,IAAIX,IAAIW,GAAKsK,YAhBrB,8BAmBUD,EAnBV,0EAmBE/C,EAnBF,kBAoBc9K,EAAO8K,EAAKtH,KApB1B,eAoBCrD,EApBD,OAsBC4N,EAAW7H,EAAS7J,QACxB,SADe,WAEXpB,IAFW,YAEGkF,EAAKb,KAAKrD,MAAM,KAAK,KAxBpC,UA6BU0J,GACbJ,EACAwI,EACA,0BACA5N,GAjCG,iBA4BQ6N,EA5BR,EA4BHlI,QAAWkI,aAQblD,EAAKtH,IAAMwK,EApCN,+RAuCDrI,GACJJ,EACAW,EACAN,EAAQ7K,MAAM0J,OACd,EAAKwJ,cA3CA,QA8CPtQ,OAAOuQ,MAAM,aA9CN,4E,wDAiDTC,a,uCAAe,WAAO9D,GAAP,SAAApK,EAAA,yDACboK,EAAMI,kBAEF,EAAK0C,KAHI,gCAILiB,IAAoB,EAAKjB,KAAKnP,KAJzB,OAMX,EAAKkG,SAAS,CAAE8I,QAAQ,IANb,2C,0KAnKGhP,G,oFACV+O,E,IAASsB,QAAS,IAAQrQ,EAAM0O,KAAKlO,MAAMR,GAAO,M,SAChCmH,I,gBAAhBmJ,E,EAAAA,MAEHvB,EAAKsB,QAAQ9H,SAAS+H,IAAQvB,EAAKsB,QAAQ3P,KAAK4P,GAE/C3K,EAAOzG,KAAK2F,IAAI5G,MAAM,KACzBZ,MAAM,GAAI,GACVsJ,QAAO,SAAA1B,GAAI,OAAKA,EAAKyK,WAAW,QAEnCX,EAAKwB,WAAL,YAAsB,IAAIC,IAAJ,sBAAY7K,GAAZ,YAAsBoJ,EAAKwB,YAAc,OAC/DxB,EAAK0B,KAAO1B,EAAK0B,MAAQ,GAEzBvR,KAAKgH,SAAS,CACZ6I,KAAK,IAAGpL,MAAO,GAAI+M,KAAMjT,KAAiBsR,K,2IA6EtC,IAAAzN,EAAOpC,KAAK2F,IAAI5G,MAAM,KAAKZ,OAAO,GAAG,GAE9B0R,EAEP7P,KAFFwG,MAASqJ,KACTI,EACEjQ,KADFiQ,KAGJ,OAAIX,GAASjO,KAAKgI,SAASjH,GAAcf,KAAKoQ,UAAU5B,GAEpDP,GAASE,KAAKnG,SAASjH,GAAcoN,KAAKiC,UAAU5B,GAEpDP,GAASC,SAASlG,SAASjH,IAAS6N,EACjCJ,GAELA,EAAK6B,QAAUnT,IAET,QAAN,OACJiR,KAAKiC,UAAU5B,GADX,oBAIJI,EAAKnP,MARiBmP,EAAKnP,SADzB,I,+BAwEQ,IAAD,OAEIuH,EAEPrI,KAFFkH,MAASmB,WAFJ,EAIHrI,KADFwG,MAASqJ,EAHJ,EAGIA,KAAMC,EAHV,EAGUA,OAGjB,OACE,0BAAM9K,UAAU,YACd,0BAAMA,UAAU,YAAY2M,QAAS3R,KAAKkQ,MAAO0B,SAAU5R,KAAKyQ,QAC9D,wBAAIzL,UAAU,cAAcqD,GAC5B,yBAAKrD,UAAU,kBACb,2BAAOA,UAAU,2BAAjB,aACA,yBAAKA,UAAU,YAAYsC,SAAUtH,KAAKoQ,aACxC,kBAAC,GAAD,CACExB,IAAK5O,KAAK2P,SACVtH,WAAYA,EACZZ,OAAQiI,EAAOmC,cACf5I,OAAQjJ,KAAK+P,WACb9I,UAAQ,MAId,yBAAKjC,UAAU,kBACb,2BAAOA,UAAU,2BAAjB,kBACA,0BAAMA,UAAU,YACd,8BACEA,UAAU,eACVe,KAAK,UACLkB,UAAQ,KAGZ,0BAAMjC,UAAU,8DACd,4BAAQ5C,KAAK,SAAS4C,UAAU,mBAAhC,UAGA,4BAAQ5C,KAAK,QAAQ4C,UAAU,kBAA/B,WAMH6K,GACC,yBAAK7K,UAAU,cACb,uCACA,kBAAC,GAAD,CACEnH,MAAOgS,EACPvI,SAAU,gBAAazJ,EAAb,EAAG6H,OAAU7H,MAAb,OACR,EAAKmJ,SAAS,CAAE6I,KAAMhS,QAM9B,yBAAKmH,UAAU,aAAagK,QAAShP,KAAKqQ,QACxC,0CACA,4BACEjO,KAAK,SACL4C,UAAU,uCACVgF,QAAShK,KAAKiR,aACdjG,OAAQ,kBAAM,EAAKhE,SAAS,CAAE8I,QAAQ,MAErCA,EAAS,SAAM,GANlB,kBAQA,kBAAC,GAAD,CAAgBlB,IAAK5O,KAAK4P,Y,+BAtQlC,OAAO5P,KAAK2P,SAASrB,U,2BAMrB,OAAOtO,KAAK4P,KAAKtB,W,wCAU+B,IAA3BlM,EAA0B,EAA1BA,KAAM2D,EAAoB,EAApBA,KAC3B,MACW,QAAT3D,GACU,SAATA,GACCT,OAAOmQ,OAAOxC,IACXyC,OACA1I,SAAStD,EAAKhH,MAAM,KAAKZ,OAAO,GAAG,Q,GA1BVwJ,IAAMC,WCR3B9B,gBAAS,YAIR,IAHdkM,EAGa,EAHbA,QACA3J,EAEa,EAFbA,WACA4J,EACa,EADbA,MAEA,OACE,oCACE,kBAACzN,EAAD,iBACMwN,EADN,CAEErN,OAAO,KACPC,MAAM,OACNC,WAAW,OACXC,UAAW,kBAAC,EAAYmN,EAAMC,SAEhC,0BACElN,UAAU,YACVmB,MAAO,CAAEgM,OAAQF,EAAMG,aAAe,OAAS,SAE/C,kBAAC,GAAD,CAAQ/J,WAAYA,S,oCC9BPgK,I,cAGnB,WAAYxK,GAAgB,IAAD,gCAF3ByK,YAE2B,8EACzBtS,KAAKsS,OAAS,IAAIvK,IAAQ,CAAEC,KAAMH,IAElC7H,KAAKsS,OAAOC,KAAKC,OAAO,WAAW,kBAAM,EAAKJ,kBAC9CpS,KAAKsS,OAAOC,KAAKE,MAAM,WAAW,kBAAM,EAAKL,kB,+LAgBnCpS,KAAKsS,OAAOpK,MAAMC,mB,oBAD1BlH,KAAQ8E,E,EAAAA,KAAMC,E,EAAAA,WAAYC,E,EAAAA,SAAUC,E,EAAAA,KAGtCvE,OAAO+Q,OAAO1S,KAAKkS,KAAM,CAAEnM,OAAMC,aAAYC,WAAUC,S,0JAfxDyM,M,yEAA0B,K,qCAE1BA,M,wEAAkB,CACjB5M,KAAM,SACNC,WACE,qHACFC,SAAU,sBACVC,KAAM,O,oCAGP0M,M,wSCVHC,c,sXAEwCpR,I,GAAkBZ,KAAlDgH,G,GAAAA,MAAOQ,G,GAAAA,WAET4J,GAAQ,IAAIa,GAAiBjL,IAEnCkL,IAASC,OACP,kBAAC,GAAgB,CAAEhB,WAAS3J,cAAY4J,WACxC/R,SAAS+S,eAAe,SAG1BhB,GAAMiB,SAENzS,OAAO0S,iBAAiB,sBAAsB,SAAAhG,GAAU,IAC9CiG,EAAWjG,EAAXiG,OAERjG,EAAMI,iBAEN9M,OAAOuQ,MAAMoC,EAAO1K,SAAW0K,OAGqC,IAAlE,CAAC,YAAa,aAAa/J,SAAS5I,OAAOM,SAASsS,WACtD5S,OAAO0S,iBACL,gBACA,SAAAhG,GAAK,OAAKA,EAAMmG,YAAc,c","file":"static/js/main.bcddfa2e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"editor\":\"MarkdownEditor_editor__2gENy\"};","export function isEmpty(value: any) {\n  return !(value != null) || (typeof value === 'number' && isNaN(value));\n}\n\nexport function uniqueID() {\n  return parseInt((Math.random() + '').slice(2)).toString(36);\n}\n\nconst unitISO = ['Y', 'M', 'D', 'H', 'm', 's', 'ms'];\nconst patternISO = /[YMDHms]+/g;\n\ntype TempDate = { [key: string]: number };\n\nexport function formatDate(\n  time: number | string | Date = Date.now(),\n  template = 'YYYY-MM-DD HH:mm:ss'\n) {\n  time = new Date(time);\n\n  const temp: TempDate = new Date(+time - time.getTimezoneOffset() * 60 * 1000)\n    .toISOString()\n    .split(/[^\\d]/)\n    .reduce((temp, section, index) => {\n      // @ts-ignore\n      temp[unitISO[index]] = +section;\n\n      return temp;\n    }, {});\n\n  return template.replace(patternISO, section =>\n    (temp[section[0]] + '').padStart(section.length, '0')\n  );\n}\n\n/**\n * @param {Function} origin\n * @param {Number}   [interval=0.25] - Seconds\n *\n * @return {Function}\n *\n * @see https://web-cell.dev/DOM-Renderer/function/index.html#static-function-debounce\n */\nexport function debounce(origin: (...data: any) => any, interval = 0.25) {\n  var timer: any;\n\n  return function(this: any, ...parameter: any[]) {\n    clearTimeout(timer);\n\n    timer = setTimeout(\n      // @ts-ignore\n      origin.bind.apply(origin, [].concat.apply([this], parameter)),\n      interval * 1000\n    );\n  };\n}\n\nconst sandbox = document.createElement('template'),\n  fragment = document.createDocumentFragment();\n/**\n * @param {String} HTML\n *\n * @return {Node[]}\n */\nexport function parseDOM(HTML: string) {\n  sandbox.innerHTML = HTML;\n\n  return Array.from(sandbox.content.childNodes).map(node => {\n    node.remove();\n    return node;\n  });\n}\n\nexport function insertToCursor(...nodes: Node[]) {\n  fragment.append(...nodes);\n\n  const selection = window.getSelection();\n\n  if (selection) selection.getRangeAt(0).insertNode(fragment);\n}\n\n/**\n * @param {String|URL} URI - Full URL of a resource\n *\n * @return {Boolean} Whether it's cross domain to current page\n *\n * @see https://web-cell.dev/WebCell/function/index.html#static-function-isXDomain\n */\nexport function isXDomain(URI: string) {\n  return new URL(URI, document.baseURI).origin !== window.location.origin;\n}\n\nexport function parseURLData(raw = window.location.search) {\n  const data: any = {},\n    parameter = (/(?:\\?|#)?(\\S+)/.exec(raw) || '')[1];\n\n  for (let [key, value] of new URLSearchParams(parameter)) {\n    try {\n      value = JSON.parse(value);\n    } catch {}\n\n    if (isEmpty(data[key])) {\n      data[key] = value;\n      continue;\n    }\n\n    if (!(data[key] instanceof Array)) data[key] = [data[key]];\n\n    data[key].push(value);\n  }\n\n  return data;\n}\n\nexport function parseCookie(raw = document.cookie) {\n  return Object.fromEntries(\n    raw.split(/;\\s*/).map(item => {\n      const data = item.split('=');\n\n      return [data.shift(), data.join('=')];\n    })\n  );\n}\n\nconst DataURI = /^data:(.+?\\/(.+?))?(;base64)?,([\\s\\S]+)/;\n/**\n * @param {String} URI - Data URI\n *\n * @return {Blob}\n *\n * @see https://web-cell.dev/WebCell/function/index.html#static-function-blobFrom\n */\nexport function blobFrom(URI: string) {\n  // @ts-ignore\n  var [_, type, __, base64, data] = DataURI.exec(URI) || []; // eslint-disable-line\n\n  data = base64 ? window.atob(data) : data;\n\n  const aBuffer = new ArrayBuffer(data.length);\n\n  const uBuffer = new Uint8Array(aBuffer);\n\n  for (let i = 0; data[i]; i++) uBuffer[i] = data.charCodeAt(i);\n\n  return new Blob([aBuffer], { type });\n}\n\nexport async function blobOf(URI: string) {\n  return (await fetch(URI)).blob();\n}\n\n/**\n * @param {Blob}   data\n * @param {String} [type='DataURL']   - https://developer.mozilla.org/en-US/docs/Web/API/FileReader#Methods\n * @param {String} [encoding='UTF-8'] - https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsText#Parameters\n *\n * @return {Promise<String|ArrayBuffer>}\n *\n * @see https://web-cell.dev/WebCell/function/index.html#static-function-readAs\n */\nexport function readAs(\n  data: Blob,\n  type = 'DataURL',\n  encoding = 'UTF-8'\n): Promise<String | ArrayBuffer | null> {\n  const reader = new FileReader();\n\n  return new Promise((resolve, reject) => {\n    reader.onload = () => resolve(reader.result);\n\n    reader.onerror = reject;\n\n    switch (type) {\n      case 'Text':\n        return reader.readAsText(data, encoding);\n      case 'DataURL':\n        return reader.readAsDataURL(data);\n      case 'BinaryString':\n        return reader.readAsBinaryString(data);\n      case 'ArrayBuffer':\n        return reader.readAsArrayBuffer(data);\n    }\n\n    throw TypeError('Unsupported type: ' + type);\n  });\n}\n\n/**\n * @param {String|Blob} raw - Binary data\n *\n * @return {String} Base64 encoded data\n *\n * @see https://web-cell.dev/WebCell/function/index.html#static-function-encodeBase64\n */\nexport async function encodeBase64(raw: string | Blob) {\n  return raw instanceof Blob\n    ? (DataURI.exec((await readAs(raw)) as string) || '')[4]\n    : window.btoa(\n        encodeURIComponent(raw).replace(/%([0-9A-F]{2})/g, (_, p1) =>\n          String.fromCharCode(+('0x' + p1))\n        )\n      );\n}\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { uniqueID, isXDomain } from '../utility';\n\ninterface MenuItem {\n  title: string;\n  href: string;\n}\n\nexport interface NavBarProps {\n  title: string;\n  menu: MenuItem[];\n  expand?: string;\n  theme?: string;\n  background?: string;\n  rightSlot?: React.Component | React.ReactFragment;\n}\n\nexport default function NavBar({\n  title,\n  menu = [],\n  expand = 'lg',\n  theme = 'light',\n  background = 'light',\n  rightSlot\n}: NavBarProps) {\n  const UID = uniqueID();\n\n  return (\n    <nav\n      className={`navbar navbar-expand-${expand} navbar-${theme} bg-${background} sticky-top`}\n    >\n      <div className=\"container\">\n        <a className=\"navbar-brand\" href=\".\">\n          {title}\n        </a>\n        <button\n          type=\"button\"\n          className=\"navbar-toggler\"\n          data-toggle=\"collapse\"\n          data-target={'#' + UID}\n          aria-controls={UID}\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id={UID}>\n          <ul className=\"navbar-nav mr-auto\">\n            {menu.map(({ title, href }, index) => (\n              <li\n                className={classNames('nav-item', { active: !index })}\n                key={title}\n              >\n                <a\n                  className=\"nav-link\"\n                  href={href}\n                  target={isXDomain(href) ? '_blank' : undefined}\n                >\n                  {title}\n                  {!index && <span className=\"sr-only\">(current)</span>}\n                </a>\n              </li>\n            ))}\n          </ul>\n          {rightSlot}\n        </div>\n      </div>\n    </nav>\n  );\n}\n","import React from 'react';\nimport { observer } from 'mobx-react';\n\nexport default observer(function UserBar({ name, avatar_url, html_url, blog }) {\n  return (\n    <a href={blog || html_url} title={name}>\n      <img\n        className=\"img-thumbnail\"\n        style={{ width: '2.5rem' }}\n        alt={name}\n        src={avatar_url}\n      />\n    </a>\n  );\n});\n","import React from 'react';\nimport { uniqueID, debounce } from '../utility';\n\nexport interface CascadeProps {\n  required: boolean;\n}\n\nexport interface CascadeState {\n  path?: string[];\n  list: any[][];\n}\n\ninterface LevelItem {\n  label?: string;\n  list: string[];\n}\n\nexport default abstract class CascadeSelect<\n  P extends CascadeProps,\n  S extends CascadeState\n> extends React.Component<P, S> {\n  UID = uniqueID();\n  // @ts-ignore\n  state = {\n    path: [],\n    list: []\n  };\n\n  get path() {\n    return this.state.path\n      .filter(Boolean)\n      .slice(0, -1)\n      .join('/');\n  }\n\n  get name() {\n    return this.state.path.slice(-1)[0];\n  }\n\n  get pathName() {\n    return this.state.path.filter(Boolean).join('/');\n  }\n\n  reset() {\n    const { path, list } = this.state;\n\n    this.setState({ path: [path[0]], list: [list[0]] });\n  }\n\n  componentDidMount() {\n    this.changeLevel(-1, '');\n  }\n\n  abstract async getNextLevel(): Promise<LevelItem | undefined>;\n\n  changeLevel = debounce(async (index: number, value: string) => {\n    const { path, list } = this.state;\n    // @ts-ignore\n    path.splice(index, Infinity, value);\n\n    const level = await this.getNextLevel();\n    // @ts-ignore\n    if (level != null) list.splice(++index, Infinity, level);\n    else list.length = ++index;\n\n    this.setState({ list });\n  });\n\n  render() {\n    const {\n      UID,\n      state: { list },\n      // @ts-ignore\n      props: { required }\n    } = this;\n\n    return (\n      <>\n        {list.map(({ label, list }: LevelItem, index) => {\n          const IID = `input-${UID}-${index}`,\n            LID = `list-${UID}-${index}`;\n\n          return (\n            <span key={IID} className=\"form-inline d-inline-flex\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id={IID}\n                list={LID}\n                onChange={({ target: { value } }) =>\n                  (value = value.trim()) && this.changeLevel(index, value)\n                }\n                required={!index && required}\n              />\n              <datalist id={LID}>\n                {list.map(item => (\n                  <option value={item} key={item} />\n                ))}\n              </datalist>\n              <label htmlFor={IID} className=\"pl-2 pr-2\">\n                {label}\n              </label>\n            </span>\n          );\n        })}\n      </>\n    );\n  }\n}\n","import { parseCookie, parseURLData, encodeBase64 } from './utility';\nimport Octokit from '@octokit/rest';\n\nconst { token }: any = { ...parseCookie(), ...parseURLData() };\n\nconst github = new Octokit({ auth: token });\n\n/**\n * @return {Promise<Object>}\n */\nexport async function getCurrentUser() {\n  return (await github.users.getAuthenticated()).data;\n}\n\n/**\n * @param {String} repository\n * @param {String} [path='']\n *\n * @return {Promise<Object|Object[]>}\n */\nexport async function getContents(repository: string, path = '') {\n  const [owner, repo] = repository.split('/');\n\n  return (await github.repos.getContents({ owner, repo, path })).data;\n}\n\n/**\n * @param {String}      repository\n * @param {String}      path\n * @param {String}      message\n * @param {String|Blob} data\n *\n * @return {Promise<Object>}\n */\nexport async function updateContent(\n  repository: string,\n  path: string,\n  message: string,\n  data: string | Blob\n) {\n  const [owner, repo] = repository.split('/');\n\n  try {\n    var sha = (await getContents(repository, path)).sha;\n  } catch {}\n\n  return (await github.repos.createOrUpdateFile({\n    owner,\n    repo,\n    path,\n    message,\n    content: await encodeBase64(data),\n    sha\n  })).data;\n}\n","import React from 'react';\nimport CascadeSelect, { CascadeProps, CascadeState } from './CascadeSelect';\n\nimport { blobFrom } from '../utility';\nimport { getContents } from '../service';\n\nexport interface GitContent {\n  type: string;\n  name: string;\n}\n\ninterface SelectProps extends CascadeProps {\n  repository: string;\n  filter?: (content: GitContent) => boolean;\n  onLoad?: (URL: string, data?: Blob) => void;\n}\n\ninterface SelectState extends CascadeState {\n  html_url: string;\n}\n\nexport default class PathSelect extends CascadeSelect<\n  SelectProps,\n  SelectState\n> {\n  filter: (name: GitContent) => boolean;\n\n  constructor(props: SelectProps) {\n    super(props);\n\n    this.filter = props.filter instanceof Function ? props.filter : Boolean;\n    // @ts-ignore\n    this.state.html_url = '';\n  }\n\n  reset() {\n    super.reset();\n\n    this.setState({ html_url: '' });\n  }\n\n  async getNextLevel() {\n    const {\n      name,\n      pathName,\n      // @ts-ignore\n      props: { repository, onLoad }\n    } = this;\n\n    try {\n      const contents = await getContents(repository, pathName);\n\n      if (contents instanceof Array)\n        return {\n          label: '/',\n          list: contents.filter(this.filter).map(({ name }) => name)\n        };\n\n      const { type, content, html_url } = contents;\n\n      if (type !== 'file') return;\n\n      this.setState({ html_url });\n\n      if (onLoad instanceof Function)\n        onLoad(html_url, blobFrom(`data:;base64,${content}`));\n    } catch ({ name: ErrorClass, status }) {\n      if (\n        ErrorClass === 'HttpError' &&\n        status === 404 &&\n        // @ts-ignore\n        name.includes('.') &&\n        onLoad instanceof Function\n      )\n        onLoad(`https://github.com/${repository}/blob/master/${pathName}`);\n    }\n  }\n\n  render() {\n    // @ts-ignore\n    const { html_url } = this.state;\n\n    return (\n      <>\n        {super.render()}\n        {html_url && (\n          <a\n            className=\"d-block pt-2\"\n            target=\"_blank\"\n            href={html_url}\n            rel=\"noopener noreferrer\"\n          >\n            <code>{html_url}</code>\n          </a>\n        )}\n      </>\n    );\n  }\n}\n","import React from 'react';\n\nconst type_map = {\n  string: { title: 'Inline text', icon: 'grip-lines' },\n  text: { title: 'Rows text', icon: 'align-left' },\n  object: { title: 'Key-value list', icon: 'list-ul' },\n  array: { title: 'Ordered list', icon: 'list-ol' }\n};\n\ninterface AddBarProps {\n  onSelect: (type: string) => void;\n}\n\nexport default function AddBar({ onSelect }: AddBarProps) {\n  return (\n    <nav>\n      {Object.entries(type_map).map(([key, { title, icon }]) => (\n        <button\n          key={key}\n          type=\"button\"\n          className={'btn btn-sm btn-success m-1 fas fa-' + icon}\n          title={title}\n          onClick={onSelect.bind(null, key)}\n        ></button>\n      ))}\n    </nav>\n  );\n}\n","import React from 'react';\n\nimport AddBar from './AddBar';\n\nimport { DataMeta } from './types';\n\ninterface FieldProps {\n  value: Object | Array<any> | null;\n  onChange?: (event: React.ChangeEvent) => void;\n}\n\nfunction dataChange(\n  target: any,\n  propertyKey: string,\n  descriptor: PropertyDescriptor\n) {\n  const method = target[propertyKey];\n  // @ts-ignore\n  descriptor.value = function(\n    this: React.Component<FieldProps, DataMeta>,\n    index: number,\n    { target: { value: data } }: any\n  ) {\n    const { children = [] } = this.state;\n\n    const item = children[index];\n\n    if (!item) return;\n\n    method.call(this, item, data);\n\n    const { onChange } = this.props;\n\n    if (onChange instanceof Function)\n      // @ts-ignore\n      onChange({ target: { value: this.state.value } });\n  };\n}\n\nexport class ListField extends React.Component<FieldProps, DataMeta> {\n  state = {\n    ...ListField.metaOf(this.props.value)\n  };\n\n  static metaOf(value: any): DataMeta {\n    if (value instanceof Array)\n      return {\n        type: 'array',\n        value,\n        children: Array.from(value, (value, key) => {\n          return {\n            ...this.metaOf(value),\n            key\n          };\n        })\n      };\n\n    if (value instanceof Object)\n      return {\n        type: 'object',\n        value,\n        children: Object.entries(value).map(([key, value]) => {\n          return {\n            ...this.metaOf(value),\n            key\n          };\n        })\n      };\n\n    return {\n      type: /[\\r\\n]/.test(value) ? 'text' : 'string',\n      value\n    };\n  }\n\n  addItem = (type: string) => {\n    var item: DataMeta = { type, value: [] };\n\n    switch (type) {\n      case 'string':\n        item = ListField.metaOf('');\n        break;\n      case 'text':\n        item = ListField.metaOf('\\n');\n        break;\n      case 'object':\n        item = ListField.metaOf({});\n        break;\n      case 'array':\n        item = ListField.metaOf([]);\n    }\n\n    this.setState({\n      ...this.state,\n      children: (this.state.children || []).concat(item)\n    });\n  };\n\n  @dataChange\n  setKey(item: DataMeta, newKey: string) {\n    const { value, children = [] } = this.state;\n\n    item.key = newKey;\n\n    for (let oldKey in value)\n      if (!children.find(({ key }) => key === oldKey)) {\n        value[newKey] = value[oldKey];\n\n        delete value[oldKey];\n        return;\n      }\n\n    value[newKey] = item.value;\n  }\n\n  @dataChange\n  setValue(item: DataMeta, newValue: any) {\n    const { value } = this.state;\n\n    if (newValue instanceof Array) newValue = [...newValue];\n    else if (typeof newValue === 'object') newValue = { ...newValue };\n\n    item.value = newValue;\n\n    if (item.key != null) value[item.key + ''] = newValue;\n    else if (value instanceof Array) item.key = value.push(newValue) - 1;\n  }\n\n  fieldOf(index: number, type: string, value: any) {\n    switch (type) {\n      case 'string':\n        return (\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            defaultValue={value}\n            placeholder=\"Value\"\n            // @ts-ignore\n            onBlur={this.setValue.bind(this, index)}\n          />\n        );\n      case 'text':\n        return (\n          <textarea\n            className=\"form-control\"\n            defaultValue={value}\n            placeholder=\"Value\"\n            // @ts-ignore\n            onBlur={this.setValue.bind(this, index)}\n          ></textarea>\n        );\n      default:\n        return (\n          // @ts-ignore\n          <ListField value={value} onChange={this.setValue.bind(this, index)} />\n        );\n    }\n  }\n\n  wrapper(slot: React.ReactFragment) {\n    return this.state.type === 'array' ? (\n      <ol className=\"inline-form\">{slot}</ol>\n    ) : (\n      <ul className=\"inline-form\">{slot}</ul>\n    );\n  }\n\n  render() {\n    const { type: field_type, children = [] } = this.state;\n\n    return this.wrapper(\n      <>\n        <li className=\"form-group\">\n          <AddBar onSelect={this.addItem} />\n        </li>\n        {children.map(({ type, key, value }, index) => (\n          <li className=\"input-group input-group-sm\" key={key}>\n            {field_type === 'object' && (\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                // @ts-ignore\n                defaultValue={key}\n                required\n                placeholder=\"Key\"\n                // @ts-ignore\n                onBlur={this.setKey.bind(this, index)}\n              />\n            )}\n            {this.fieldOf(index, type, value)}\n          </li>\n        ))}\n      </>\n    );\n  }\n}\n","import TurnDown from 'turndown';\n// @ts-ignore\nimport { gfm } from 'turndown-plugin-gfm';\n\nconst Empty_HREF = /^(#|javascript:\\s*void\\(0\\);?\\s*)$/;\n\ntype TurnDownGFM = (td: TurnDown) => void;\n\nexport default class extends TurnDown {\n  constructor(options?: any) {\n    super({\n      headingStyle: 'atx',\n      hr: '---',\n      bulletListMarker: '-',\n      codeBlockStyle: 'fenced',\n      linkStyle: 'referenced',\n      ...options\n    });\n\n    this.use(gfm as TurnDownGFM)\n      .addRule('non_url', {\n        filter: node =>\n          ['a', 'area'].includes(node.nodeName.toLowerCase()) &&\n          Empty_HREF.test(node.getAttribute('href') || ''),\n        replacement: (content, node) =>\n          content.trim() ||\n          (node instanceof HTMLElement ? node.title.trim() : '')\n      })\n      .addRule('asset_code', {\n        filter: ['style', 'script'],\n        replacement: () => ''\n      });\n  }\n}\n","import React, { createRef } from 'react';\nimport classNames from 'classnames';\n\nimport * as MarkdownIME from 'markdown-ime';\nimport marked from 'marked';\nimport TurnDown from './TurnDown';\n\nimport { debounce, parseDOM, insertToCursor } from '../../utility';\n\nimport STYLE from './index.module.css';\n\ntype EditorProps = { rules?: any };\ntype InputHandler = (event: React.FormEvent) => void;\n\nexport default class MarkdownEditor extends React.Component<EditorProps> {\n  convertor: TurnDown;\n  private contentEditable = createRef<HTMLDivElement>();\n\n  get root() {\n    return this.contentEditable.current;\n  }\n\n  state = {\n    count: 0\n  };\n\n  constructor(props: EditorProps) {\n    super(props);\n\n    this.convertor = new TurnDown();\n\n    for (let key in props.rules) this.convertor.addRule(key, props.rules[key]);\n  }\n\n  componentDidMount() {\n    // @ts-ignore\n    MarkdownIME.Enhance(this.root);\n  }\n\n  countText = debounce(() => {\n    var count = 0;\n\n    if (this.root) count = (this.root.textContent || '').trim().length;\n\n    this.setState({ count });\n  });\n\n  private manualChange() {\n    this.countText();\n\n    if (this.root)\n      this.root.dispatchEvent(\n        new CustomEvent('input', {\n          bubbles: true,\n          detail: this.root.textContent\n        })\n      );\n  }\n\n  set raw(code) {\n    if (!this.root) return;\n\n    this.root.innerHTML = marked(code);\n\n    this.manualChange();\n  }\n\n  get raw() {\n    return this.root ? this.convertor.turndown(this.root) : '';\n  }\n\n  handleOuterData = async (event: React.DragEvent | React.ClipboardEvent) => {\n    // @ts-ignore\n    const { items } = event.dataTransfer || event.clipboardData;\n\n    if (!items[0]) return;\n\n    event.preventDefault();\n\n    var list: DataTransferItem[] = Array.from(items);\n\n    if (list.find(({ type }) => /xml|html/.test(type)))\n      list = list.filter(({ type }) => type !== 'text/plain');\n\n    const parts = await Promise.all(\n      list.map((item: DataTransferItem) => {\n        if (item.kind === 'string')\n          return new Promise(resolve =>\n            item.getAsString(raw => resolve(marked(raw)))\n          );\n\n        const file = item.getAsFile();\n\n        if (file) {\n          const src = URL.createObjectURL(file);\n\n          switch (item.type.split('/')[0]) {\n            case 'image':\n              return `<img src=${src}>`;\n            case 'audio':\n              return `<audio src=${src}></audio>`;\n            case 'video':\n              return `<video src=${src}></video>`;\n          }\n        }\n        return '';\n      })\n    );\n\n    insertToCursor(...parseDOM(parts.filter(Boolean).join('\\n')));\n\n    this.manualChange();\n  };\n\n  render() {\n    return (\n      <div\n        contentEditable\n        ref={this.contentEditable}\n        className={classNames('form-control', 'markdown-body', STYLE.editor)}\n        data-count={this.state.count}\n        onInput={this.countText as InputHandler}\n        onPaste={this.handleOuterData}\n        onDrop={this.handleOuterData}\n      ></div>\n    );\n  }\n}\n","import * as clipboard from 'clipboard-polyfill';\nimport React, { createRef, MouseEvent } from 'react';\n\nimport PathSelect, { GitContent } from '../component/PathSelect';\nimport { ListField } from '../component/JSONEditor';\nimport MarkdownEditor from '../component/MarkdownEditor';\n\nimport YAML from 'yaml';\nimport { readAs, debounce, blobOf, uniqueID, formatDate } from '../utility';\nimport { getCurrentUser, updateContent } from '../service';\n\nexport const pageURL = window.location.href.split('?')[0];\n\nexport const fileType = {\n  MarkDown: ['md', 'markdown'],\n  JSON: ['json'],\n  YAML: ['yml', 'yaml']\n};\n\nexport const postMeta = /^---[\\r\\n]([\\s\\S]*?)[\\r\\n]---/;\n\nexport type HyperLink = HTMLAnchorElement & HTMLImageElement;\n\nexport default class Editor extends React.Component<{ repository: string }> {\n  private Selector = createRef<PathSelect>();\n\n  get selector() {\n    return this.Selector.current;\n  }\n\n  private Core = createRef<MarkdownEditor>();\n\n  get core() {\n    return this.Core.current;\n  }\n\n  URL = '';\n\n  state = {\n    meta: null,\n    copied: false\n  };\n\n  static contentFilter({ type, name }: GitContent) {\n    return (\n      type === 'dir' ||\n      (type === 'file' &&\n        Object.values(fileType)\n          .flat()\n          .includes(name.split('.').slice(-1)[0]))\n    );\n  }\n\n  async setPostMeta(raw?: string) {\n    const meta = { authors: [], ...(raw ? YAML.parse(raw) : null) };\n    const { login } = await getCurrentUser();\n\n    if (!meta.authors.includes(login)) meta.authors.push(login);\n\n    const path = this.URL.split('/')\n      .slice(7, -1)\n      .filter(name => !name.startsWith('_'));\n\n    meta.categories = [...new Set([...path, ...(meta.categories || [])])];\n    meta.tags = meta.tags || [];\n\n    this.setState({\n      meta: { title: '', date: formatDate(), ...meta }\n    });\n  }\n\n  setContent = async (URL: string, data?: Blob) => {\n    this.URL = URL;\n\n    const type = URL.split('.').slice(-1)[0];\n\n    if (!(data instanceof Blob)) {\n      if (fileType.MarkDown.includes(type)) await this.setPostMeta();\n\n      return;\n    }\n\n    var content = (await readAs(data, 'Text')) as string;\n\n    if (fileType.JSON.includes(type))\n      return this.setState({ meta: JSON.parse(content) });\n\n    if (fileType.YAML.includes(type))\n      return this.setState({ meta: YAML.parse(content) });\n\n    const meta = postMeta.exec(content);\n\n    if (!meta) await this.setPostMeta();\n    else {\n      content = content.slice(meta[0].length);\n\n      meta[1] = meta[1].trim();\n\n      if (meta[1]) this.setPostMeta(meta[1]);\n    }\n\n    if (this.core) this.core.raw = content;\n  };\n\n  reset = () => {\n    this.setState({ meta: null });\n\n    if (this.selector) this.selector.reset();\n    if (this.core) this.core.raw = '';\n  };\n\n  onPathClear = ({\n    target: { value }\n  }: React.ChangeEvent<HTMLInputElement>) => {\n    if (value.trim()) return;\n\n    this.setState({ meta: null });\n\n    if (this.core) this.core.raw = '';\n  };\n\n  fixURL = debounce(() => {\n    const { repository } = this.props;\n\n    if (this.core && this.core.root)\n      for (let element of this.core.root.querySelectorAll<HyperLink>(\n        '[href], [src]'\n      )) {\n        let URI = element.href || element.src;\n\n        if (URI.startsWith(pageURL)) URI = URI.slice(pageURL.length);\n\n        URI = new URL(URI, this.URL || window.location.href) + '';\n\n        if ('src' in element)\n          element.src = URI.replace(\n            repository + '/blob/',\n            repository + '/raw/'\n          );\n        else element.href = URI;\n      }\n  });\n\n  getContent() {\n    const type = this.URL.split('.').slice(-1)[0],\n      {\n        state: { meta },\n        core\n      } = this;\n\n    if (fileType.JSON.includes(type)) return JSON.stringify(meta);\n\n    if (fileType.YAML.includes(type)) return YAML.stringify(meta);\n\n    if (fileType.MarkDown.includes(type) && core) {\n      if (!meta) return core.raw;\n      // @ts-ignore\n      meta.updated = formatDate();\n\n      return `---\n${YAML.stringify(meta)}\n---\n\n${core.raw}`;\n    }\n  }\n\n  submit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const { repository } = this.props,\n      {\n        // @ts-ignore\n        selector: { pathName },\n        core\n      } = this,\n      // @ts-ignore\n      { message } = event.target.elements;\n\n    if (!core || !core.root) return;\n\n    const media: HTMLMediaElement[] = [].filter.call(\n      core.root.querySelectorAll('img[src], audio[src], video[src]'),\n      ({ src }) => new URL(src).protocol === 'blob:'\n    );\n\n    for (let file of media) {\n      const blob = await blobOf(file.src);\n\n      const filePath = pathName.replace(\n        /\\.\\w+$/,\n        `/${uniqueID()}.${blob.type.split('/')[1]}`\n      );\n\n      const {\n        content: { download_url }\n      }: any = await updateContent(\n        repository,\n        filePath,\n        '[Upload] from Git-Pager',\n        blob\n      );\n\n      file.src = download_url;\n    }\n\n    await updateContent(\n      repository,\n      pathName,\n      message.value.trim(),\n      this.getContent() as string\n    );\n\n    window.alert('Submitted');\n  };\n\n  copyMarkdown = async (event: MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n\n    if (this.core) {\n      await clipboard.writeText(this.core.raw);\n\n      this.setState({ copied: true });\n    }\n  };\n\n  render() {\n    const {\n      props: { repository },\n      state: { meta, copied }\n    } = this;\n\n    return (\n      <main className=\"card m-3\">\n        <form className=\"card-body\" onReset={this.reset} onSubmit={this.submit}>\n          <h1 className=\"card-title\">{repository}</h1>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-2 col-form-label\">File path</label>\n            <div className=\"col-sm-10\" onChange={this.onPathClear}>\n              <PathSelect\n                ref={this.Selector}\n                repository={repository}\n                filter={Editor.contentFilter}\n                onLoad={this.setContent}\n                required\n              />\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-2 col-form-label\">Commit message</label>\n            <span className=\"col-sm-7\">\n              <textarea\n                className=\"form-control\"\n                name=\"message\"\n                required\n              ></textarea>\n            </span>\n            <span className=\"col-sm-3 d-flex justify-content-between align-items-center\">\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Commit\n              </button>\n              <button type=\"reset\" className=\"btn btn-danger\">\n                Clear\n              </button>\n            </span>\n          </div>\n\n          {meta && (\n            <div className=\"form-group\">\n              <label>Meta</label>\n              <ListField\n                value={meta}\n                onChange={({ target: { value } }: any) =>\n                  this.setState({ meta: value })\n                }\n              />\n            </div>\n          )}\n\n          <div className=\"form-group\" onInput={this.fixURL}>\n            <label>Content</label>\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary btn-sm float-right\"\n              onClick={this.copyMarkdown}\n              onBlur={() => this.setState({ copied: false })}\n            >\n              {copied ? '√' : ''} Copy MarkDown\n            </button>\n            <MarkdownEditor ref={this.Core} />\n          </div>\n        </form>\n      </main>\n    );\n  }\n}\n","import React from 'react';\nimport { observer } from 'mobx-react';\n\nimport NavBar, { NavBarProps } from '../component/NavBar';\nimport UserBar from '../component/UserBar';\nimport Editor from './Editor';\n\nimport Application from '../model';\n\ninterface FrameProps {\n  navData: NavBarProps;\n  repository: string;\n  store: Application;\n}\n\nexport default observer(function Application({\n  navData,\n  repository,\n  store\n}: FrameProps) {\n  return (\n    <>\n      <NavBar\n        {...navData}\n        expand=\"sm\"\n        theme=\"dark\"\n        background=\"dark\"\n        rightSlot={<UserBar {...store.user} />}\n      />\n      <main\n        className=\"container\"\n        style={{ cursor: store.loadingCount ? 'wait' : 'auto' }}\n      >\n        <Editor repository={repository} />\n      </main>\n    </>\n  );\n});\n","import { observable, action } from 'mobx';\nimport Octokit from '@octokit/rest';\n\nexport default class Application {\n  client: Octokit;\n\n  constructor(token: string) {\n    this.client = new Octokit({ auth: token });\n\n    this.client.hook.before('request', () => this.loadingCount++);\n    this.client.hook.after('request', () => this.loadingCount--);\n  }\n\n  @observable loadingCount = 0;\n\n  @observable user = {\n    name: 'GitHub',\n    avatar_url:\n      'https://raw.githubusercontent.com/github/explore/78df643247d429f6cc873026c0622819ad797942/topics/github/github.png',\n    html_url: 'https://github.com/',\n    blog: ''\n  };\n\n  @action async signIn() {\n    const {\n      data: { name, avatar_url, html_url, blog }\n    } = await this.client.users.getAuthenticated();\n\n    Object.assign(this.user, { name, avatar_url, html_url, blog });\n  }\n}\n","import 'core-js/es/object/from-entries';\n// @ts-ignore\nimport { auto } from 'browser-unhandled-rejection';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { parseCookie, parseURLData } from './utility';\n\nimport Application from './page';\n\nimport navData from './index.json';\nimport ApplicationModel from './model';\n\nauto();\n\nconst { token, repository }: any = { ...parseCookie(), ...parseURLData() };\n\nconst store = new ApplicationModel(token);\n\nReactDOM.render(\n  <Application {...{ navData, repository, store }} />,\n  document.getElementById('root')\n);\n\nstore.signIn();\n\nwindow.addEventListener('unhandledrejection', event => {\n  const { reason } = event;\n\n  event.preventDefault();\n\n  window.alert(reason.message || reason);\n});\n\nif (['localhost', '127.0.0.1'].includes(window.location.hostname) === false)\n  window.addEventListener(\n    'beforeunload',\n    event => (event.returnValue = 'Exit ?')\n  );\n"],"sourceRoot":""}